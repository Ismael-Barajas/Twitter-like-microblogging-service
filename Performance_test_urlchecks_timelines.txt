Synchronous EndPoint

hey -H "Authorization: Basic $(echo -n ProfAvery:password | base64)" -H "Content-Type: application/json" -m POST -D "./test.json"  http://timelines.localhost/compose/post

Summary:
  Total:	5.0456 secs
  Slowest:	3.3860 secs
  Fastest:	0.0206 secs
  Average:	0.7258 secs
  Requests/sec:	39.6382
  
  Total data:	12400 bytes
  Size/request:	62 bytes

Response time histogram:
  0.021 [1]	|
  0.357 [106]	|■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
  0.694 [31]	|■■■■■■■■■■■■
  1.030 [8]	|■■■
  1.367 [16]	|■■■■■■
  1.703 [14]	|■■■■■
  2.040 [3]	|■
  2.376 [2]	|■
  2.713 [3]	|■
  3.049 [4]	|■■
  3.386 [12]	|■■■■■


Latency distribution:
  10% in 0.0476 secs
  25% in 0.1564 secs
  50% in 0.3342 secs
  75% in 1.1035 secs
  90% in 2.2634 secs
  95% in 3.0575 secs
  99% in 3.3117 secs

Details (average, fastest, slowest):
  DNS+dialup:	0.0056 secs, 0.0206 secs, 3.3860 secs
  DNS-lookup:	0.0018 secs, 0.0000 secs, 0.0148 secs
  req write:	0.0004 secs, 0.0000 secs, 0.0150 secs
  resp wait:	0.7194 secs, 0.0205 secs, 3.3857 secs
  resp read:	0.0002 secs, 0.0000 secs, 0.0031 secs

Status code distribution:
  [201]	200 responses



Asynchronous EndPoint

hey -H "Authorization: Basic $(echo -n ProfAvery:password | base64)" -H "Content-Type: application/json" -m POST -D "./test.json"  http://timelines.localhost/compose/async/post

Summary:
  Total:	2.5947 secs
  Slowest:	1.9643 secs
  Fastest:	0.0111 secs
  Average:	0.3706 secs
  Requests/sec:	77.0788
  
  Total data:	8400 bytes
  Size/request:	42 bytes

Response time histogram:
  0.011 [1]	|
  0.206 [133]	|■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
  0.402 [23]	|■■■■■■■
  0.597 [1]	|
  0.792 [0]	|
  0.988 [0]	|
  1.183 [26]	|■■■■■■■■
  1.378 [8]	|■■
  1.574 [3]	|■
  1.769 [1]	|
  1.964 [4]	|■


Latency distribution:
  10% in 0.0355 secs
  25% in 0.1156 secs
  50% in 0.1766 secs
  75% in 0.2251 secs
  90% in 1.1490 secs
  95% in 1.2391 secs
  99% in 1.9474 secs

Details (average, fastest, slowest):
  DNS+dialup:	0.0054 secs, 0.0111 secs, 1.9643 secs
  DNS-lookup:	0.0017 secs, 0.0000 secs, 0.0139 secs
  req write:	0.0001 secs, 0.0000 secs, 0.0114 secs
  resp wait:	0.3641 secs, 0.0084 secs, 1.9202 secs
  resp read:	0.0003 secs, 0.0000 secs, 0.0035 secs

Status code distribution:
  [202]	200 responses


  Checking for valid post URLs in the background does not make a difference,
  if anything it was faster this time around by a half a second.
  This shows that message queues improve performance.